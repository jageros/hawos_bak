// Generated by gen_meta.py
// DO NOT EDIT!

package meta

import (
	"errors"

	"github.com/jageros/hawos/protos/pb"
)

//@ C2S_CREATE_ROOM   req: CreateRoomArg  resp: RoomInfo
//------------------------------------------------------------------------------------------
// implement IMeta
type C2S_CREATE_ROOM_Meta struct {
}

func (m *C2S_CREATE_ROOM_Meta) GetMsgID() IMsgID {
	return pb.MsgID_C2S_CREATE_ROOM
}

func (m *C2S_CREATE_ROOM_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.CreateRoomArg)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_CREATE_ROOM_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *C2S_CREATE_ROOM_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.CreateRoomArg{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *C2S_CREATE_ROOM_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	_reply, ok := reply.(*pb.RoomInfo)
	if !ok {
		p, ok := reply.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_CREATE_ROOM_Meta EncodeReply error type")
	}

	return _reply.Marshal()
}

func (m *C2S_CREATE_ROOM_Meta) DecodeReply(data []byte) (interface{}, error) {
	reply := &pb.RoomInfo{}
	if err := reply.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return reply, nil
	}
}

//------------------------------------ C2S_CREATE_ROOM END ----------------------------------------

//@ C2S_ENTER_ROOM    req: TargetRoom   resp: RoomInfo
//------------------------------------------------------------------------------------------
// implement IMeta
type C2S_ENTER_ROOM_Meta struct {
}

func (m *C2S_ENTER_ROOM_Meta) GetMsgID() IMsgID {
	return pb.MsgID_C2S_ENTER_ROOM
}

func (m *C2S_ENTER_ROOM_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.TargetRoom)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_ENTER_ROOM_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *C2S_ENTER_ROOM_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.TargetRoom{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *C2S_ENTER_ROOM_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	_reply, ok := reply.(*pb.RoomInfo)
	if !ok {
		p, ok := reply.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_ENTER_ROOM_Meta EncodeReply error type")
	}

	return _reply.Marshal()
}

func (m *C2S_ENTER_ROOM_Meta) DecodeReply(data []byte) (interface{}, error) {
	reply := &pb.RoomInfo{}
	if err := reply.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return reply, nil
	}
}

//------------------------------------ C2S_ENTER_ROOM END ----------------------------------------

//@ C2S_SEND_GLOBAL_MSG    req: ChatMsg    resp: ok or err
//------------------------------------------------------------------------------------------
// implement IMeta
type C2S_SEND_GLOBAL_MSG_Meta struct {
}

func (m *C2S_SEND_GLOBAL_MSG_Meta) GetMsgID() IMsgID {
	return pb.MsgID_C2S_SEND_GLOBAL_MSG
}

func (m *C2S_SEND_GLOBAL_MSG_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.ChatMsg)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_SEND_GLOBAL_MSG_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *C2S_SEND_GLOBAL_MSG_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.ChatMsg{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *C2S_SEND_GLOBAL_MSG_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	return nil, nil
}

func (m *C2S_SEND_GLOBAL_MSG_Meta) DecodeReply(data []byte) (interface{}, error) {
	return nil, nil
}

//------------------------------------ C2S_SEND_GLOBAL_MSG END ----------------------------------------

//@ S2C_BROADCAST_ROOM_INFO req: RoomInfo
//------------------------------------------------------------------------------------------
// implement IMeta
type S2C_BROADCAST_ROOM_INFO_Meta struct {
}

func (m *S2C_BROADCAST_ROOM_INFO_Meta) GetMsgID() IMsgID {
	return pb.MsgID_S2C_BROADCAST_ROOM_INFO
}

func (m *S2C_BROADCAST_ROOM_INFO_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.RoomInfo)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("S2C_BROADCAST_ROOM_INFO_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *S2C_BROADCAST_ROOM_INFO_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.RoomInfo{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *S2C_BROADCAST_ROOM_INFO_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	return nil, nil
}

func (m *S2C_BROADCAST_ROOM_INFO_Meta) DecodeReply(data []byte) (interface{}, error) {
	return nil, nil
}

//------------------------------------ S2C_BROADCAST_ROOM_INFO END ----------------------------------------

//@ S2C_GLOBAL_MSG req: ChatMsg
//------------------------------------------------------------------------------------------
// implement IMeta
type S2C_GLOBAL_MSG_Meta struct {
}

func (m *S2C_GLOBAL_MSG_Meta) GetMsgID() IMsgID {
	return pb.MsgID_S2C_GLOBAL_MSG
}

func (m *S2C_GLOBAL_MSG_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.ChatMsg)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("S2C_GLOBAL_MSG_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *S2C_GLOBAL_MSG_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.ChatMsg{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *S2C_GLOBAL_MSG_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	return nil, nil
}

func (m *S2C_GLOBAL_MSG_Meta) DecodeReply(data []byte) (interface{}, error) {
	return nil, nil
}

//------------------------------------ S2C_GLOBAL_MSG END ----------------------------------------

