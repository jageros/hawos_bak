// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: errcode.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrCode int32

const (
	ErrCode_UNKNOWN_ERR_CODE    ErrCode = 0
	ErrCode_Success             ErrCode = 200
	ErrCode_ServiceNotFound     ErrCode = 404
	ErrCode_MetaCoderNotFound   ErrCode = 405
	ErrCode_ProtoMsgIdNoHandles ErrCode = 406
	//  服务端内部错误 1000-9999
	ErrCode_InternalErr ErrCode = 1000
	// 业务逻辑错误协 >= 10000
	ErrCode_AuthErr      ErrCode = 10000
	ErrCode_InvalidParam ErrCode = 10001
)

var ErrCode_name = map[int32]string{
	0:     "UNKNOWN_ERR_CODE",
	200:   "Success",
	404:   "ServiceNotFound",
	405:   "MetaCoderNotFound",
	406:   "ProtoMsgIdNoHandles",
	1000:  "InternalErr",
	10000: "AuthErr",
	10001: "InvalidParam",
}

var ErrCode_value = map[string]int32{
	"UNKNOWN_ERR_CODE":    0,
	"Success":             200,
	"ServiceNotFound":     404,
	"MetaCoderNotFound":   405,
	"ProtoMsgIdNoHandles": 406,
	"InternalErr":         1000,
	"AuthErr":             10000,
	"InvalidParam":        10001,
}

func (x ErrCode) String() string {
	return proto.EnumName(ErrCode_name, int32(x))
}

func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4240057316120df7, []int{0}
}

func init() {
	proto.RegisterEnum("pb.ErrCode", ErrCode_name, ErrCode_value)
}

func init() { proto.RegisterFile("errcode.proto", fileDescriptor_4240057316120df7) }

var fileDescriptor_4240057316120df7 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x2d, 0x2a, 0x4a,
	0xce, 0x4f, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0xd2, 0x5a, 0xc1,
	0xc8, 0xc5, 0xee, 0x5a, 0x54, 0xe4, 0x9c, 0x9f, 0x92, 0x2a, 0x24, 0xc2, 0x25, 0x10, 0xea, 0xe7,
	0xed, 0xe7, 0x1f, 0xee, 0x17, 0xef, 0x1a, 0x14, 0x14, 0xef, 0xec, 0xef, 0xe2, 0x2a, 0xc0, 0x20,
	0xc4, 0xc3, 0xc5, 0x1e, 0x5c, 0x9a, 0x9c, 0x9c, 0x5a, 0x5c, 0x2c, 0x70, 0x82, 0x51, 0x48, 0x84,
	0x8b, 0x3f, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0xd5, 0x2f, 0xbf, 0xc4, 0x2d, 0xbf, 0x34, 0x2f,
	0x45, 0x60, 0x0a, 0xb3, 0x90, 0x18, 0x97, 0xa0, 0x6f, 0x6a, 0x49, 0x22, 0xc8, 0x94, 0x22, 0xb8,
	0xf8, 0x54, 0x66, 0x21, 0x09, 0x2e, 0xe1, 0x00, 0x90, 0x55, 0xbe, 0xc5, 0xe9, 0x9e, 0x29, 0x7e,
	0xf9, 0x1e, 0x89, 0x79, 0x29, 0x39, 0xa9, 0xc5, 0x02, 0xd3, 0x98, 0x85, 0x04, 0xb8, 0xb8, 0x3d,
	0xf3, 0x4a, 0x52, 0x8b, 0xf2, 0x12, 0x73, 0x5c, 0x8b, 0x8a, 0x04, 0x5e, 0xb0, 0x83, 0xec, 0x71,
	0x2c, 0x2d, 0xc9, 0x00, 0xf1, 0x26, 0xf8, 0x09, 0x09, 0x72, 0xf1, 0x78, 0xe6, 0x95, 0x25, 0xe6,
	0x64, 0xa6, 0x04, 0x24, 0x16, 0x25, 0xe6, 0x0a, 0x4c, 0xf4, 0x73, 0x12, 0x38, 0xf1, 0x48, 0x8e,
	0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x67, 0x3c, 0x96, 0x63, 0x48, 0x62, 0x03,
	0xfb, 0xc3, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x02, 0x5b, 0x35, 0x69, 0xd8, 0x00, 0x00, 0x00,
}
